/*
 * APIv3 (Beta)
 *  # Introduction Just a quick pick!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # HTTP Methods for RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.egoi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.egoi.client.model.CampaignEmailContentFile;
import org.egoi.client.model.CampaignEmailContentHtml;
import org.egoi.client.model.CampaignEmailContentTemplate;
import org.egoi.client.model.CampaignEmailContentWebPage;

/**
 * CampaignEmailContent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-18T16:14:18.288020Z[Europe/Lisbon]")

public class CampaignEmailContent {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FILE("file");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_PLAIN_TEXT = "plain_text";
  @SerializedName(SERIALIZED_NAME_PLAIN_TEXT)
  private String plainText;

  public static final String SERIALIZED_NAME_SNIPPET = "snippet";
  @SerializedName(SERIALIZED_NAME_SNIPPET)
  private String snippet;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private Integer templateId;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USE_PAGE_TITLE = "use_page_title";
  @SerializedName(SERIALIZED_NAME_USE_PAGE_TITLE)
  private Boolean usePageTitle = false;

  public static final String SERIALIZED_NAME_FILE = "file";
  @SerializedName(SERIALIZED_NAME_FILE)
  private String file;

  public CampaignEmailContent() {
    this.type = this.getClass().getSimpleName();
  }

  public CampaignEmailContent type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CampaignEmailContent body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * HTML code of the campaign
   * @return body
  **/
  @ApiModelProperty(required = true, value = "HTML code of the campaign")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public CampaignEmailContent plainText(String plainText) {
    
    this.plainText = plainText;
    return this;
  }

   /**
   * Plain text for the campaign
   * @return plainText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Plain text for the campaign")

  public String getPlainText() {
    return plainText;
  }


  public void setPlainText(String plainText) {
    this.plainText = plainText;
  }


  public CampaignEmailContent snippet(String snippet) {
    
    this.snippet = snippet;
    return this;
  }

   /**
   * Snippet text for the campaign
   * @return snippet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Snippet text for the campaign")

  public String getSnippet() {
    return snippet;
  }


  public void setSnippet(String snippet) {
    this.snippet = snippet;
  }


  public CampaignEmailContent templateId(Integer templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * ID of the template for this campaign
   * @return templateId
  **/
  @ApiModelProperty(required = true, value = "ID of the template for this campaign")

  public Integer getTemplateId() {
    return templateId;
  }


  public void setTemplateId(Integer templateId) {
    this.templateId = templateId;
  }


  public CampaignEmailContent url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Campaign url
   * @return url
  **/
  @ApiModelProperty(required = true, value = "Campaign url")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public CampaignEmailContent usePageTitle(Boolean usePageTitle) {
    
    this.usePageTitle = usePageTitle;
    return this;
  }

   /**
   * True to use page title as the campaign title
   * @return usePageTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True to use page title as the campaign title")

  public Boolean getUsePageTitle() {
    return usePageTitle;
  }


  public void setUsePageTitle(Boolean usePageTitle) {
    this.usePageTitle = usePageTitle;
  }


  public CampaignEmailContent file(String file) {
    
    this.file = file;
    return this;
  }

   /**
   * Campaign file
   * @return file
  **/
  @ApiModelProperty(required = true, value = "Campaign file")

  public String getFile() {
    return file;
  }


  public void setFile(String file) {
    this.file = file;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignEmailContent campaignEmailContent = (CampaignEmailContent) o;
    return Objects.equals(this.type, campaignEmailContent.type) &&
        Objects.equals(this.body, campaignEmailContent.body) &&
        Objects.equals(this.plainText, campaignEmailContent.plainText) &&
        Objects.equals(this.snippet, campaignEmailContent.snippet) &&
        Objects.equals(this.templateId, campaignEmailContent.templateId) &&
        Objects.equals(this.url, campaignEmailContent.url) &&
        Objects.equals(this.usePageTitle, campaignEmailContent.usePageTitle) &&
        Objects.equals(this.file, campaignEmailContent.file);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, body, plainText, snippet, templateId, url, usePageTitle, file);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignEmailContent {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    plainText: ").append(toIndentedString(plainText)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usePageTitle: ").append(toIndentedString(usePageTitle)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

